# we comment this out unless we're on the live server
server {
       # redirect HTTP to HTTPS
       listen 80;
       server_name courses.cs.sfu.ca;
       location / {
               rewrite ^ https://$server_name$request_uri? permanent;
               add_header Strict-Transport-Security max-age=31536000;
       }
}

server {
       # redirect IP address to domain name
       listen 443;
       ssl on;
       ssl_certificate      /etc/nginx/cert.pem;
       ssl_certificate_key  /etc/nginx/cert.key;
       server_name 199.60.18.207;
       location / {
               rewrite ^ https://courses.cs.sfu.ca$request_uri? permanent;
               add_header Strict-Transport-Security max-age=31536000;
       }
}

server {
        # the real HTTPS server

        server_name courses.cs.sfu.ca;
        #server_name  localhost;
        listen   443;
        ssl on;
        ssl_certificate      /etc/nginx/cert.pem;
        ssl_certificate_key  /etc/nginx/cert.key;

        access_log /var/log/nginx/localhost.access.log;
        error_log /var/log/nginx/error.log warn;

        #upload_max_file_size 50m;
        client_max_body_size 100m;
        client_body_buffer_size 1024k;

        # Use HTTP Strict Transport Security to force client to use secure connections only
        add_header Strict-Transport-Security max-age=31536000;

        rewrite ^/media/(.*)$ /static/$1 permanent;

        location /static {
                root /home/coursys/static;
                expires 1d;
                gzip             on;
                gzip_min_length  1000;
                gzip_proxied     expired no-cache no-store private auth;
                gzip_types       application/x-javascript application/javascript text/javascript text/css;
                gzip_disable     "MSIE [1-6]\.";
                add_header Cache-Control "public";
                location /static/newsfu/fonts {
                        expires 365d;
                }
                location /static/CACHE {
                        expires 365d;
                }
        }

        location / {
                # host and port to gunicorn server
                proxy_pass http://localhost:8000/;
                proxy_read_timeout 1200;
                proxy_connect_timeout 1200;
                proxy_redirect off;
                proxy_pass_header Server;
                #proxy_set_header Host courses.cs.sfu.ca;
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-Ssl on;
                add_header Strict-Transport-Security max-age=31536000;
        }

}

#server { # elasticsearch (management) interface at https://courses.cs.sfu.ca:9201/_plugin/HQ/
#        listen 9201;
#        allow 142.58.21.41; # Greg office
#        deny all;
#        ssl on;
#        ssl_certificate      /etc/nginx/cert.pem;
#        ssl_certificate_key  /etc/nginx/cert.key;
#        location / {
#                proxy_pass http://localhost:9200/;
#        }
#}
