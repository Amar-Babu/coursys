# from https://github.com/18F/tls-standards/blob/008ad71ff13b368895351342142eea4fba671a50/configuration/nginx/ssl.rules
add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';
#ssl_prefer_server_ciphers on;
ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
ssl_session_cache shared:SSL:10m;
ssl_session_timeout 10m;

# mods from https://weakdh.org/sysadmin.html
ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
ssl_dhparam /etc/nginx/dhparams.pem;

# http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx
add_header X-Content-Type-Options nosniff;

# we comment this out unless we're on the live server
server {
       # redirect HTTP to HTTPS
       listen 80;
       server_name courses.cs.sfu.ca;
       location / {
               rewrite ^ https://$server_name$request_uri? permanent;
       }
}

server {
       # redirect IP address to domain name
       listen 443;
       ssl on;
       ssl_certificate      /etc/nginx/cert.pem;
       ssl_certificate_key  /etc/nginx/cert.key;
       server_name 199.60.18.207;
       location / {
               rewrite ^ https://courses.cs.sfu.ca$request_uri? permanent;
       }
}

server {
       # redirect unused coursys.cs name to main domain
       listen 443;
       ssl on;
       ssl_certificate      /etc/nginx/cert.pem;
       ssl_certificate_key  /etc/nginx/cert.key;
       server_name coursys.cs.sfu.ca;
       location / {
               rewrite ^ https://courses.cs.sfu.ca$request_uri? permanent;
       }
}

server {
        # the courses.cs.sfu.ca HTTPS server
        server_name courses.cs.sfu.ca;
        listen   443;
        ssl on;
        ssl_certificate      /etc/nginx/cert.pem;
        ssl_certificate_key  /etc/nginx/cert.key;
        access_log /var/log/nginx/courses.cs.access.log;
        error_log /var/log/nginx/courses.cs.error.log warn;
        include /etc/nginx/sites-available/nginx_base.conf;
}

server {
        # the coursys.sfu.ca HTTPS server
        server_name coursys.sfu.ca;
        listen   443;
        ssl on;
        ssl_certificate      /etc/letsencrypt/live/coursys.sfu.ca/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/coursys.sfu.ca/privkey.pem;
        access_log /var/log/nginx/courses.access.log;
        error_log /var/log/nginx/courses.error.log warn;
        include /etc/nginx/sites-available/nginx_base.conf;
}

server {
        # the coursys.sfu.ca HTTPS server
        server_name fasit.sfu.ca;
        listen   443;
        ssl on;
        ssl_certificate      /etc/letsencrypt/live/fasit.sfu.ca/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/fasit.sfu.ca/privkey.pem;
        access_log /var/log/nginx/fasit.access.log;
        error_log /var/log/nginx/fasit.error.log warn;
        include /etc/nginx/sites-available/nginx_base.conf;
}

#server { # elasticsearch (management) interface at https://courses.cs.sfu.ca:9201/_plugin/HQ/
#        listen 9201;
#        allow 142.58.1.1;
#        deny all;
#        ssl on;
#        ssl_certificate      /etc/nginx/cert.pem;
#        ssl_certificate_key  /etc/nginx/cert.key;
#        location / {
#                proxy_pass http://localhost:9200/;
#        }
#}

#server { # celery flower monitoring: process must be started manually like ./manage.py celery flower --basic-auth=user:pass --address=127.0.0.1
#  listen 5556;
#  allow 142.58.1.1;
#  deny all;
#        ssl on;
#        ssl_certificate      /etc/nginx/cert.pem;
#        ssl_certificate_key  /etc/nginx/cert.key;
#        location / {
#                proxy_pass http://localhost:5555/;
#        }
#}