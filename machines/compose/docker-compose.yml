version: '3'
services:

  db:
    image: "mysql:5.7"
    ports:
      - "3306:3306"
    volumes:
      - coursys_db:/var/lib/mysql:rw
    environment:
      MYSQL_DATABASE: coursys
      MYSQL_USER: coursysuser
      MYSQL_PASSWORD: coursyspassword
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  memcache:
    image: "memcached:1.5-alpine"

  app:
    build:
      context: ../..
      dockerfile: Dockerfile-app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - memcache
    volumes:
      - ../../:/code:ro
      - coursys_static:/static:rw
      - ./localsettings.py:/code/courses/localsettings.py:ro
      - ./secrets.py:/code/courses/secrets.py:ro
    environment:
      PYTHONUNBUFFERED: 1
      WAIT_HOSTS: db:3306, solr:8983

  rabbitmq:
    image: "rabbitmq:3.7-alpine"

  celery:
    # TODO: on first startup, should wait for db migration
    build:
      context: ../..
      dockerfile: Dockerfile-celery
    depends_on:
      - rabbitmq
    volumes:
      - ../../:/code:ro
      - ./localsettings.py:/code/courses/localsettings.py:ro
      - ./secrets.py:/code/courses/secrets.py:ro
    environment:
      PYTHONUNBUFFERED: 1
      WAIT_HOSTS: db:3306

  web:
    image: "nginx:stable"
    ports:
      - "8080:80"
      - "8443:443"
    depends_on:
      - app
    volumes:
      - coursys_static:/static:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ../chef/cookbooks/coursys_proddev/files/default/self-ssl.key:/etc/nginx/cert.key:ro
      - ../chef/cookbooks/coursys_proddev/files/default/self-ssl.pem:/etc/nginx/cert.pem:ro

  #elasticsearch:
  #  image: "elasticsearch:6.7.2"
  #  ports:
  #    - 9200:9200
  #    - 9300:9300
  #  environment:
  #    discovery.type: single-node
  #  volumes:
  #    - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro

  solr:
    image: "solr:8-alpine"
    ports:
      - "8983:8983"
    volumes:
      - ./solr-config:/config:ro
    command: solr-create -c coursys -d /config

volumes:
  coursys_static:
  coursys_db: