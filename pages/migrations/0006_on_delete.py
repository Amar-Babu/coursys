# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-01-18 17:09
from __future__ import unicode_literals

import courselib.json_fields
import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion
import pages.models


class Migration(migrations.Migration):

    dependencies = [
        ('pages', '0005_add_redirect'),
    ]

    operations = [
        migrations.AlterField(
            model_name='page',
            name='can_read',
            field=models.CharField(choices=[('NONE', 'nobody'), ('INST', 'instructor'), ('STAF', 'instructor and TAs'), ('STUD', 'students, instructor and TAs'), ('ALL', 'anybody')], default='ALL', help_text='Who should be able to view this page?', max_length=4),
        ),
        migrations.AlterField(
            model_name='page',
            name='can_write',
            field=models.CharField(choices=[('NONE', 'nobody'), ('INST', 'instructor'), ('STAF', 'instructor and TAs'), ('STUD', 'students, instructor and TAs')], default='STAF', help_text='Who should be able to edit this page?', max_length=4, verbose_name='Can change'),
        ),
        migrations.AlterField(
            model_name='page',
            name='config',
            field=courselib.json_fields.JSONField(default=dict),
        ),
        migrations.AlterField(
            model_name='page',
            name='label',
            field=models.CharField(db_index=True, help_text='The &ldquo;filename&rdquo; for this page', max_length=30),
        ),
        migrations.AlterField(
            model_name='page',
            name='offering',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coredata.CourseOffering'),
        ),
        migrations.AlterField(
            model_name='pagepermission',
            name='config',
            field=courselib.json_fields.JSONField(default=dict),
        ),
        migrations.AlterField(
            model_name='pagepermission',
            name='offering',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coredata.CourseOffering'),
        ),
        migrations.AlterField(
            model_name='pagepermission',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coredata.Person'),
        ),
        migrations.AlterField(
            model_name='pagepermission',
            name='role',
            field=models.CharField(choices=[('INST', 'instructor'), ('STAF', 'instructor and TAs'), ('STUD', 'students, instructor and TAs')], default='STUD', help_text='What level of access should this person have for the course?', max_length=4),
        ),
        migrations.AlterField(
            model_name='pageversion',
            name='config',
            field=courselib.json_fields.JSONField(default=dict),
        ),
        migrations.AlterField(
            model_name='pageversion',
            name='diff_from',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='pages.PageVersion'),
        ),
        migrations.AlterField(
            model_name='pageversion',
            name='editor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coredata.Member'),
        ),
        migrations.AlterField(
            model_name='pageversion',
            name='file_attachment',
            field=models.FileField(max_length=500, storage=django.core.files.storage.FileSystemStorage(base_url=None, location='submitted_files'), upload_to=pages.models.attachment_upload_to),
        ),
        migrations.AlterField(
            model_name='pageversion',
            name='page',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pages.Page'),
        ),
        migrations.AlterField(
            model_name='pageversion',
            name='title',
            field=models.CharField(help_text='The title for the page', max_length=60),
        ),
        migrations.AlterField(
            model_name='pageversion',
            name='wikitext',
            field=models.TextField(help_text='Markup content of the page', verbose_name='Content'),
        ),
    ]
