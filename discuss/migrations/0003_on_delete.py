# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-01-18 17:09
from __future__ import unicode_literals

import autoslug.fields
import courselib.json_fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('discuss', '0002_autoslug'),
    ]

    operations = [
        migrations.AlterField(
            model_name='discussionmessage',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coredata.Member'),
        ),
        migrations.AlterField(
            model_name='discussionmessage',
            name='config',
            field=courselib.json_fields.JSONField(default=dict),
        ),
        migrations.AlterField(
            model_name='discussionmessage',
            name='content',
            field=models.TextField(),
        ),
        migrations.AlterField(
            model_name='discussionmessage',
            name='slug',
            field=autoslug.fields.AutoSlugField(editable=False, populate_from='autoslug', unique_with=['topic']),
        ),
        migrations.AlterField(
            model_name='discussionmessage',
            name='status',
            field=models.CharField(choices=[('VIS', 'Visible'), ('HID', 'Hidden')], default='VIS', max_length=3),
        ),
        migrations.AlterField(
            model_name='discussionsubscription',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coredata.Member'),
        ),
        migrations.AlterField(
            model_name='discussionsubscription',
            name='status',
            field=models.CharField(choices=[('NONE', 'Do nothing'), ('MAIL', 'Email me when a new topic is started'), ('ALLM', 'Email me for new topics and replies')], default='NONE', help_text='Action to take when a new topic is posted', max_length=4, verbose_name='Notification'),
        ),
        migrations.AlterField(
            model_name='discussiontopic',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coredata.Member'),
        ),
        migrations.AlterField(
            model_name='discussiontopic',
            name='config',
            field=courselib.json_fields.JSONField(default=dict),
        ),
        migrations.AlterField(
            model_name='discussiontopic',
            name='content',
            field=models.TextField(help_text='The inital message for the topic.'),
        ),
        migrations.AlterField(
            model_name='discussiontopic',
            name='offering',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coredata.CourseOffering'),
        ),
        migrations.AlterField(
            model_name='discussiontopic',
            name='pinned',
            field=models.BooleanField(default=False, help_text='Should this topic be pinned to bring attention?'),
        ),
        migrations.AlterField(
            model_name='discussiontopic',
            name='slug',
            field=autoslug.fields.AutoSlugField(editable=False, populate_from='autoslug', unique_with=['offering']),
        ),
        migrations.AlterField(
            model_name='discussiontopic',
            name='status',
            field=models.CharField(choices=[('OPN', 'Open'), ('ANS', 'Answered'), ('CLO', 'Closed'), ('HID', 'Hidden')], default='OPN', help_text='The topic status: Closed: no replies allowed, Hidden: cannot be seen', max_length=3),
        ),
        migrations.AlterField(
            model_name='discussiontopic',
            name='title',
            field=models.CharField(help_text='A brief description of the topic', max_length=140),
        ),
        migrations.AlterField(
            model_name='topicsubscription',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coredata.Member'),
        ),
        migrations.AlterField(
            model_name='topicsubscription',
            name='status',
            field=models.CharField(choices=[('NONE', 'Do nothing'), ('MAIL', 'Email me')], default='MAIL', help_text='Action to take when a new message is posted to this topic', max_length=4, verbose_name='Notification'),
        ),
    ]
